name: Python Installer

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

jobs:
  analysis:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 1
      matrix:
        python-version: [ 3.13 ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Code Analysis
        run: |
          pip install flake8
          flake8 . --ignore E501,F541,W293 --exclude build-on-trigger

  pip-install-macos:

    permissions:
      checks: write
      contents: read
      pull-requests: write

    runs-on: macos-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [ '3.13' ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Setup
        run: |
          pip install . -v

      - name: Clone test repo and run some tests
        shell: pwsh
        run: |
          git clone https://github.com/feelixs/tictactoe-mini.git
          cd tictactoe-mini
          ssotme touppercase test
          cat output.txt

  pip-install-linux:

    permissions:
      checks: write
      contents: read
      pull-requests: write

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [ '3.13' ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Setup
        run: |
          pip install . -v

      - name: Clone test repo and run some tests
        shell: pwsh
        run: |
          ssotme touppercase test
          $output = cat output.txt
          if ($output -eq "TEST") {
            Write-Host "✅ ssotme CLI ran successfully"
            exit 0
          } else {
            Write-Host "❌ ssotme CLI failed unexpectedly. Expected TEST, got: "
            Write-Host $output
            exit 1
          }

  pip-install-windows:

    permissions:
      checks: write
      contents: read
      pull-requests: write

    runs-on: windows-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [ '3.13' ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Setup
        run: |
          pip install . -v

      - name: Clone test repo and run some tests
        shell: pwsh
        run: |
          ssotme touppercase test
          $output = cat output.txt
          if ($output -eq "TEST") {
            Write-Host "✅ ssotme CLI ran successfully"
            exit 0
          } else {
            Write-Host "❌ ssotme CLI failed unexpectedly. Expected TEST, got: "
            Write-Host $output
            exit 1
          }
